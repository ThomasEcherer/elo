Ext.data.JsonP.p6CC4A7DD_5185_4F14_AF1E_3EB3D566E9E5({"guide":"<h1 id='p6CC4A7DD_5185_4F14_AF1E_3EB3D566E9E5-section-jshint-konfiguration'>JSHint-Konfiguration</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li>1. <a href='#!/guide/p6CC4A7DD_5185_4F14_AF1E_3EB3D566E9E5-section-jshint-konfiguration-in-eclipse-setzen'>JSHint-Konfiguration in Eclipse setzen</a>\n </li>\n<li>2. <a href='#!/guide/p6CC4A7DD_5185_4F14_AF1E_3EB3D566E9E5-section-konfiguration-jshint'>Konfiguration JSHint</a>\n </li>\n</ul></div>\n\n<p><span\nstyle='color:black'>Als einheitlicher Standard für validen JS-Code wird das Analysetool </span><span\nstyle='font-weight:bold;font-style:italic;color:black'>JSHint</span><span\nstyle='color:black'> verwendet. Weitere Informationen gibt die offizielle </span><a\nhref=\"http://jshint.com/docs/\">Website</a><span style='color:black'>.</span></p>\n\n<h2 id='p6CC4A7DD_5185_4F14_AF1E_3EB3D566E9E5-section-jshint-konfiguration-in-eclipse-setzen'>JSHint-Konfiguration in Eclipse setzen</h2>\n\n<p>Die Entwicklungsumgebung Eclipse bietet über ein Plugin die Möglichkeit, JS-Dateien mit JSHint zu prüfen. Hier kann im Dialog <span\nstyle='font-weight:bold;font-style:italic'>Preferences</span> eine Konfiguration hinterlegt werden:</p>\n\n<p><p><img src=\"guides/p6CC4A7DD_5185_4F14_AF1E_3EB3D566E9E5/img1.png\" alt=\"\" width=\"795\" height=\"548\"></p></p>\n\n<h2 id='p6CC4A7DD_5185_4F14_AF1E_3EB3D566E9E5-section-konfiguration-jshint'>Konfiguration JSHint</h2>\n\n<pre><code>{\n    \"maxerr\"        : 50,       // {int} Maximum error before stopping\n\n    // Enforcing\n    \"curly\"         : true,     // true: Require {} for every new block or scope\n    \"forin\"         : true,     // true: Require filtering for..in loops with obj.hasOwnProperty()\n    \"immed\"         : false,    // true: Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`\n    \"indent\"        : 2,        // {int} Number of spaces to use for indentation\n    \"newcap\"        : false,    // true: Require capitalization of all constructor functions e.g. `new F()`\n    \"noempty\"       : true,     // true: Prohibit use of empty blocks\n    \"nonbsp\"        : true,     // true: Prohibit \"non-breaking whitespace\" characters.\n    \"nonew\"         : false,    // true: Prohibit use of constructors for side-effects (without assignment)\n    \"quotmark\"      : false,    // Quotation mark consistency:\n                                //   false    : do nothing (default)\n                                //   true     : ensure whatever is used is consistent\n                                //   \"single\" : require single quotes\n                                //   \"double\" : require double quotes\n    \"undef\"         : true,     // true: Require all non-global variables to be declared (prevents global leaks)\n    \"unused\"        : false,    // true: Require all defined variables be used\n    \"strict\"        : false,    // true: Requires all functions run in ES5 Strict Mode\n    \"maxparams\"     : false,    // {int} Max number of formal params allowed per function\n    \"maxdepth\"      : false,    // {int} Max depth of nested blocks (within functions)\n    \"maxstatements\" : false,    // {int} Max number statements per function\n    \"maxcomplexity\" : false,    // {int} Max cyclomatic complexity per function\n    \"maxlen\"        : false,    // {int} Max number of characters per line\n\n    // Relaxing\n    \"asi\"           : false,     // true: Tolerate Automatic Semicolon Insertion (no semicolons)\n    \"boss\"          : false,     // true: Tolerate assignments where comparisons would be expected\n    \"debug\"         : true,      // true: Allow debugger statements e.g. browser breakpoints.\n    \"eqnull\"        : false,     // true: Tolerate use of `== null`\n    \"es5\"           : false,     // true: Allow ES5 syntax (ex: getters and setters)\n    \"esnext\"        : false,     // true: Allow ES.next (ES6) syntax (ex: `const`)\n    \"funcscope\"     : false,     // true: Tolerate defining variables inside control statements\n    \"globalstrict\"  : false,     // true: Allow global \"use strict\" (also enables 'strict')\n    \"lastsemic\"     : false,     // true: Tolerate omitting a semicolon for the last statement of a 1-line block\n    \"laxbreak\"      : false,     // true: Tolerate possibly unsafe line breakings\n    \"laxcomma\"      : false,     // true: Tolerate comma-first style coding\n    \"loopfunc\"      : false,     // true: Tolerate functions being defined in loops\n    \"multistr\"      : false,     // true: Tolerate multi-line strings\n    \"noyield\"       : false,     // true: Tolerate generator functions with no yield statement in them.\n    \"notypeof\"      : false,     // true: Tolerate invalid typeof operator values\n    \"proto\"         : false,     // true: Tolerate using the `__proto__` property\n    \"scripturl\"     : false,     // true: Tolerate script-targeted URLs\n    \"shadow\"        : false,     // true: Allows re-define variables later in code e.g. `var x=1; x=2;`\n    \"sub\"           : false,     // true: Tolerate using `[]` notation when it can still be expressed in dot notation\n    \"supernew\"      : false,     // true: Tolerate `new function () { ... };` and `new Object;`\n    \"validthis\"     : false,     // true: Tolerate using this in a non-constructor function\n\n    // Environments\n    \"devel\"         : true,     // Development/debugging (alert, confirm, etc)\n    \"rhino\"         : true,     // Rhino\n\n    // Custom Globals\n    \"globals\"       : {},       // additional predefined global variables\n\n    \"-W079\"         : false,    // Redefinition of '{a}'\n    \"-W100\"         : false,    // 'This character may get silently deleted by one or more browsers'\n\n    \"predef\": [\"sol\",\n               \"DocMaskLineC\",\n               \"EditInfoC\",\n               \"EditInfoZ\",\n               \"ix\",\n               \"IXExceptionC\",\n               \"LockC\",\n               \"log\",\n               \"SordC\",\n               \"SordZ\"]\n}\n</code></pre>\n","title":"JSHint-Konfiguration"});