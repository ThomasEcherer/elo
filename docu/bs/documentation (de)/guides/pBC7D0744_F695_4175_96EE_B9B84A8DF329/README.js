Ext.data.JsonP.pBC7D0744_F695_4175_96EE_B9B84A8DF329({"guide":"<h1 id='pBC7D0744_F695_4175_96EE_B9B84A8DF329-section-logging'>Logging</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li>1. <a href='#!/guide/pBC7D0744_F695_4175_96EE_B9B84A8DF329-section-beispielhafte-verwendung'>Beispielhafte Verwendung</a>\n </li>\n<li>2. <a href='#!/guide/pBC7D0744_F695_4175_96EE_B9B84A8DF329-section-loggen-von-funktionen'>Loggen von Funktionen</a>\n </li>\n</ul></div>\n\n<p>Das Logging von Lösungen wird mithilfe einer Hilfsklasse <code><a href=\"#!/api/sol.Logger\" rel=\"sol.Logger\" class=\"docClass\">sol.Logger</a></code> standardisiert. Diese stellt u. a. folgende Funktionen zur Verfügung:</p>\n\n<ul>\n<li>Standardisierte Ausgabe für alle Typen</li>\n<li>Vordefinierter Scope, der in die Log-Ausgabe aufgenommen wird</li>\n<li>String Formatting-Möglichkeiten, um Log-Ausgaben mit Werten zu versehen</li>\n<li>Weiterführende Informationen in das Log aufnehmen durch die Übergabe eines JS-Objekts</li>\n<li>Ausführungszeiten von Funktionen loggen</li>\n</ul>\n\n\n<p><span class=\"tag_important\">Eine genaue Beschreibung der Logging-Möglichkeiten gibt die Klasse <code><a href=\"#!/api/sol.Logger\" rel=\"sol.Logger\" class=\"docClass\">sol.Logger</a></code>. Alternativ kann selbstverständlich auch der im Scripting verfügbare Standard-Logger <code>log</code> verwendet werden.</span></p>\n\n<h2 id='pBC7D0744_F695_4175_96EE_B9B84A8DF329-section-beispielhafte-verwendung'>Beispielhafte Verwendung</h2>\n\n<p>Zuerst muss eine Instanz der Logger-Klasse erzeugt werden:</p>\n\n<pre><code>var logger = <a href=\"#!/api/sol-static-method-create\" rel=\"sol-static-method-create\" class=\"docClass\">sol.create</a>(\"<a href=\"#!/api/sol.Logger\" rel=\"sol.Logger\" class=\"docClass\">sol.Logger</a>\", { scope: 'custom.ix.MyClass' });\n</code></pre>\n\n<p><span class=\"tag_important\"><span\nstyle='font-weight:bold'>Für Implementierungen innerhalb einer eigenen Klasse, welche über das Klassenframework erstellt wurde</span>, erfolgt die Instanziierung des Loggers in der <code>initialize</code>-Funktion von <code><a href=\"#!/api/sol.Base\" rel=\"sol.Base\" class=\"docClass\">sol.Base</a></code>  Falls kein Logger zur Verfügung steht, ist zu prüfen, ob bei eigenen <code>initialize</code>-Funktionen auch die <code>initialize</code>-Funktion der Superklasse <code><a href=\"#!/api/sol.Base\" rel=\"sol.Base\" class=\"docClass\">sol.Base</a></code> aufgerufen wurde.</span></p>\n\n<p>Folgende Beispiele zeigen eine Verwendung des Loggers. Weitere Erklärungen können der Klassendokumentation von <code><a href=\"#!/api/sol.Logger\" rel=\"sol.Logger\" class=\"docClass\">sol.Logger</a></code> entnommen werden.</p>\n\n<pre><code>logger.info('Searching for elements...');\n// [custom.ix.MyClass] Searching for elements... :\n\nlogger.info('Searching for elements...', { parentId: 123 });\n// [custom.ix.MyClass] Searching for elements... : {\"parentId\":123}\n\nlogger.info(['Searching for elements of parentId: {0}', 123]);\n// [custom.ix.MyClass] Searching for elements of parentId: 123 :\n\nlogger.info(['Searching for elements of parentId: {0}', 123], {userName: 'Administrator'});\n// [custom.ix.MyClass] Searching for elements of parentId: 123 : {\"userName\":\"Administrator\"}\n</code></pre>\n\n<h2 id='pBC7D0744_F695_4175_96EE_B9B84A8DF329-section-loggen-von-funktionen'>Loggen von Funktionen</h2>\n\n<p><span class=\"tag_important\">Gerade bei vielen Funktionsaufrufen ist es notwendig, teure Aufrufe zu identifizieren, um die Performanz zu verbessern. Aus diesem Grund sollten Funktionenaufrufe mit <code>me.logger.enter</code> und <code>me.logger.exit</code> protokolliert werden. Im Debug-Modus wird anschließend die Ausführungszeit nach übergebenem Funktionsnamen ermittelt.</span></p>\n\n<pre><code>myFunction: function() {\n  var me = this;\n  me.logger.enter(\"my.Function\", { param: \"abc\" });  // Object optional\n  // function code belongs here.\n  me.logger.exit(\"my.Function\", { result: \"xyz\"});  // Object optional\n}\n\n// [custom.ix.MyClass] ENTER my.Function : {\"param\":\"abc\"}\n// [custom.ix.MyClass] EXIT my.Function : 313ms : {\"result\":\"xyz\"}\n</code></pre>\n","title":"Logging"});