Ext.data.JsonP.pC411E915_1753_4F9F_8A37_C9F350DC7BA6({"guide":"<h1 id='pC411E915_1753_4F9F_8A37_C9F350DC7BA6-section-erweitern-von-elo-business-solutions%2F-support'>Erweitern von ELO Business Solutions/ Support</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li>1. <a href='#!/guide/pC411E915_1753_4F9F_8A37_C9F350DC7BA6-section-einsatz-von-custom-paketen'>Einsatz von Custom-Paketen</a>\n </li>\n<li>2. <a href='#!/guide/pC411E915_1753_4F9F_8A37_C9F350DC7BA6-section-erweiterungen-von-javascript-klassen'>Erweiterungen von JavaScript-Klassen</a>\n </li>\n<li>3. <a href='#!/guide/pC411E915_1753_4F9F_8A37_C9F350DC7BA6-section-%C3%84nderungen-an-technischen-abl%C3%A4ufen'>Änderungen an technischen Abläufen</a>\n </li>\n<li>4. <a href='#!/guide/pC411E915_1753_4F9F_8A37_C9F350DC7BA6-section-formularbausteine-erweitern'>Formularbausteine erweitern</a>\n </li>\n<li>5. <a href='#!/guide/pC411E915_1753_4F9F_8A37_C9F350DC7BA6-section-logik-bestehender-js-klassen-erweitern'>Logik bestehender JS-Klassen erweitern</a>\n </li>\n<li>6. <a href='#!/guide/pC411E915_1753_4F9F_8A37_C9F350DC7BA6-section-bugfixes'>Bugfixes</a>\n </li>\n<li>7. <a href='#!/guide/pC411E915_1753_4F9F_8A37_C9F350DC7BA6-section-%C3%84nderung-an-business-solutions-javascript-dateien'>Änderung an Business Solutions JavaScript-Dateien</a>\n </li>\n</ul></div>\n\n<p><span class=\"tag_caution\">Erweiterungen und Funktionsänderungen dürfen nicht in den JavaScript-Klassen der <span\nstyle='font-style:italic'>Business Solutions</span>-Pakete vorgenommen werden. Hierzu stehen gesonderte Custom-Pakete bereit. Änderungen an den Kernkomponenten verhindern die Updatefähigkeit einer Lösung. In diesem Fall erlischt auch der Supportanspruch.</span></p>\n\n<p><span\nstyle='font-style:italic'>Business Solutions</span> implementieren unterschiedliche Konzepte, um bestehende Logik anzupassen. Wenden Sie sich bei Fragen bitte an das<span\nstyle='font-style:italic'> Business Solutions</span>-Team.</p>\n\n<h2 id='pC411E915_1753_4F9F_8A37_C9F350DC7BA6-section-einsatz-von-custom-paketen'>Einsatz von Custom-Paketen</h2>\n\n<p>Eine Lösung ist in unterschiedliche Pakete eingeteilt, welche wiederum zusätzlich Custom-Pakete enthalten. Mithilfe dieser Custom-Pakete kann eine Lösung hinsichtlich der Konfiguration oder bspw. verfügbaren Aktentypen angepasst werden. Sind die Developer Tools installiert kann aus jedem Custom Paket zusätzlich eine Installationsdatei erzeugt werden. Somit lassen sich alle Änderungen für einen Kunden bequem vom Entwicklungssystem zum Kunden transportieren.</p>\n\n<p><p><img src=\"guides/pC411E915_1753_4F9F_8A37_C9F350DC7BA6/img1.png\" alt=\"„ Business Solution Custom\ncontract\n„ Business Solutions\n_global\nChecklist\ncommon\ne\ncommon fx\ne\ncommon_monitoring\ne\ncommon_signature\ne\nconnector\nconnector_xml\" width=\"316\" height=\"290\"></p>\n<p><img src=\"guides/pC411E915_1753_4F9F_8A37_C9F350DC7BA6/img3.png\" alt=\"Involce\ninvoice [Default connectorsl\ninvoice [DocXtractor connectorsl\" width=\"316\" height=\"73\"></p></p>\n\n<p><span class=\"tag_important\">Tipp: Mithilfe von Custom-Paketen können zudem Standard-Konfigurationen für unterschiedliche Anwendungsfälle geschaffen werden. Bspw. &quot;Vertragsmanagement - Immobilienverwaltung&quot;.</span></p>\n\n<p>In einem Custom-Paket findet sich meist ein komplettes Abbild der Konfiguration. Nachfolgend am Beispiel des Invoice-Custom-Paketes. Konfigurationsdateien sind dabei leer und tragen lediglich die Änderungen zur Basiskonfiguration.</p>\n\n<p><p><img src=\"guides/pC411E915_1753_4F9F_8A37_C9F350DC7BA6/img5.png\" alt=\"Involce\neloinst\nConfiguration\nDashboard-Data\nExport Templates\nas config\nsohinvoicæconfig\nsohinvoiceExportConfig\nsohinvoice]nvoiceXmllmpoNConfig\nsoLinvoiceLocalizedKwlsconfig\nsoLinvoiceWorkflowUserRolesconfig\nELOapps\nELOwf Base\nInvoice Templates\" width=\"319\" height=\"338\"></p></p>\n\n<p>Die Konfigurationsseiten der Lösung visualisieren diesen Vorgang und zeigen an, für welche Einstellungen Änderungen vorgenommen worden sind. Nachfolgend am Beispiel der Konfiguration sol.invoice.config.</p>\n\n<p><p><img src=\"guides/pC411E915_1753_4F9F_8A37_C9F350DC7BA6/img7.png\" alt=\"Invoice Config\nGeneral\nGeneral settings\nDefault\nDefault\nDefault\nXML import\nGeneral\nuser interface\nWorkflow\n/Invoice/Entry\nExpert mode\nInitial filing path\nFiling path in the repository\nFiling path invoice templates\nFile invoice as a container\nO\n0 sord_objKeys. VENDOR_NAME 0\nSolutions Custom/invoiceycontiguration/lnvoice Templates\" width=\"1067\" height=\"403\"></p></p>\n\n<h2 id='pC411E915_1753_4F9F_8A37_C9F350DC7BA6-section-erweiterungen-von-javascript-klassen'>Erweiterungen von JavaScript-Klassen</h2>\n\n<p>Weiterentwicklungen sollten dabei ebenfalls in das Custom-Paket gelegt werden, damit diese mit dem gleichen Mechanismus portiert werden können.</p>\n\n<p>Skripte/ Änderungen sollten anschließend an die entsprechenden Stellen referenziert werden. Dies ermöglicht auch das Erstellen eigener Installationspakete, um vom <span\nstyle='font-style:italic'>Business Solutions</span>-Standard abweichende Änderungen in das System einzuspielen.</p>\n\n<p>JavaScript-Klassen müssen in einem eigenen Namespace liegen, bspw. <code>partner.invoice.ix</code><br/>\nSiehe hierzu auch <a\nhref=\"#!/guide/p225231D5_0733_4F82_8228_A54C4A60E920\">Namespaces</a>.</p>\n\n<p><span class=\"tag_caution\">Der Namespace<span\nstyle='font-weight:bold'> <code>sol</code></span> darf nur von <span style='font-style:\nitalic'>Business Solutions</span> verwendet werden. Eigene Klassen in diesem Namespace kollidieren eventuell mit Änderungen zukünftiger Versionen.</span></p>\n\n<h2 id='pC411E915_1753_4F9F_8A37_C9F350DC7BA6-section-%C3%84nderungen-an-technischen-abl%C3%A4ufen'>Änderungen an technischen Abläufen</h2>\n\n<p>Technische Abläufe werden in <span\nstyle='font-style:italic'>Business Solutions</span> soweit sinnvoll mithilfe von Workflow-Funktionsbausteinen realisiert. Ist eine eigene Logik gewünscht, kann der Workflow an die Projektanforderung angepasst werden.</p>\n\n<p>Funktionsbausteine tragen hierzu eine Konfiguration im Knoten-Kommentar und können auch leicht entfernt werden.\nSiehe hierzu auch <a\nhref=\"#!/guide/pADD870BA_9AA2_4900_8D6B_FA0FB26D9BEC\">Funktionsbausteine</a>.</p>\n\n<p>Soll nach der Extraktion von ZUGFeRD-Daten bspw. kein Feed-Beitrag geschrieben werden, kann der markierte Knoten einfach entfernt werden. Ist eine andere Nachricht erwünscht, legen Sie eine eigene Sprachdatei in das Verzeichnis <span\nstyle='font-weight:bold;font-style:italic'>Administration\\Localization\\custom\\</span> und passen Sie die Knotenkonfiguration entsprechend an.</p>\n\n<p><p><img src=\"guides/pC411E915_1753_4F9F_8A37_C9F350DC7BA6/img9.png\" alt=\"STATUS: 1 Data analysis\nFEEOCOMMENT : start invoice approval\nCHANGECOLOR : Unprocessed invoice\nr•e::&#39; ZUGFeR0\nELO Service\nZUGFeRO data extracted?\nINVOICE DATACOLLECT10N-ZUGFeRD\nOOCXtractor?\nFEEOCOMMENT :\nELO WF STATUS-OX ENAaLED\nFEEOCOMMENT : ZUGFeR0\nox export\nELO Service\nSTATUS : 2 Formal check\nOX Rejected?\nox Doc CLASS-InvoiceJReject\nDEFAULTVALUES : Apply defaults\nCHANGEUSER : Formal check\nOX response\nELO Service\" width=\"682\" height=\"357\"></p></p>\n\n<p>Reichen die bestehenden Funktionsbausteine nicht aus um die Anforderungen hinreichend abzudecken, können eigene Funktionsbausteine geschrieben werden.</p>\n\n<p><span class=\"tag_important\">Es empfiehlt sich den Workflow zu kopieren und den neuen Namen in der Konfiguration des Custom-Pakets zu hinterlegen. Für alle technischen Workflows steht hierfür eine Einstellung zur Verfügung.</span></p>\n\n<h2 id='pC411E915_1753_4F9F_8A37_C9F350DC7BA6-section-formularbausteine-erweitern'>Formularbausteine erweitern</h2>\n\n<p><span class=\"tag_important\">Ab ELO 10.01 können Formulare der Business Solutions direkt im Formulardesigner bearbeitet werden. Änderungen werden dabei automatisch im Custom-Paket abgelegt und sind weitgehend Updatefähig.</span></p>\n\n<p>Formulare können einfach erweitert werden. Änderungen an den<span\nstyle='font-style:italic'> Business Solutions</span>-Formularen sollten jedoch in einem eigenen Template vorgenommen werden. Klonen Sie hierzu das bestehende Template, platzieren Sie es in ein eigenes Modul und referenzieren Sie es in das Formular.</p>\n\n<p><p><img src=\"guides/pC411E915_1753_4F9F_8A37_C9F350DC7BA6/img11.png\" alt=\"Formulardesigner\nFormular\nFormulare\neloinvoice\ntest\nTemplate\nTabelle\nEI Tab-Gruppe\nAktualisieren\nPreview\nSchließen\na-usteir,e einfügen\nNeues Template anlegen\nS&#39;,&#39;5tem\nZu dem aktuell ausgewählten Formular wird nun ein neues Template angelegt.\nVerwenden Sie nur Buchstaben, Ziffern und den Unterstrich, der Name darf\nkeine Umlaute oder Sonderzeichen enthalten und maximal 30 Zeichen lang\nsein. Ein Punkt &quot;_&quot; wird als Separator für Mobile Ansichten verwendet und\nsollte deshlab nicht Teil des Namens sein.\nKopieren von\nTemplate Name\ninv03 vendor au\ncustom03 vendor a\ninv04_in&#39;Æice date appr_mobile\" width=\"865\" height=\"410\"></p></p>\n\n<h2 id='pC411E915_1753_4F9F_8A37_C9F350DC7BA6-section-logik-bestehender-js-klassen-erweitern'>Logik bestehender JS-Klassen erweitern</h2>\n\n<p>Trifft eine Klasse nicht die Projektanforderungen, erzeugen Sie eine Sub-Klasse und überschreiben die gewünschten Properties/ Funktionen. Dies ist hilfreich, falls bspw. SQL-Abfragen der bereitgestellten Stichwortlisten modifiziert werden müssen.</p>\n\n<h2 id='pC411E915_1753_4F9F_8A37_C9F350DC7BA6-section-bugfixes'>Bugfixes</h2>\n\n<p>Fehler gefunden? Dieser darf selbstverständlich behoben werden. Änderungen bitte über den Support an das <span\nstyle='font-style:italic'>Business Solutions</span>-Team weiterleiten, damit wir diesen auch im Kernprodukt beheben können. Das <span\nstyle='font-style:italic'>Business Solutions</span>-Team freut sich über jegliche Verbesserungsvorschläge! :)</p>\n\n<h2 id='pC411E915_1753_4F9F_8A37_C9F350DC7BA6-section-%C3%84nderung-an-business-solutions-javascript-dateien'>Änderung an Business Solutions JavaScript-Dateien</h2>\n\n<p>In einigen Fällen sind Änderungen an Basis-Klassen notwendig um mit vertretbarem Aufwand Anpassungen vorzunehmen. Beispiele hierfür sind bspw. <span\nstyle='font-weight:bold'>vorhandene Dynamische Stichwortlisten</span>.</p>\n\n<p>Einzelne Dateien können ebenfalls im Custom Paket überschrieben werden. In diesem Fall muss wie folgt vorgegangen werden.</p>\n\n<ol>\n<li>Kopieren Sie das gewünschte Script vom Basis-Paket in das Custom Paket an die selbe Stelle. (Bspw. <code>Business Solutions\\contract\\Index Server Scripting Base\\sol.contract.MyDynKwl</code> nach <code>Business Solutions\\contract\\Index Server Scripting Base\\sol.contract.MyDynKwl</code>.</li>\n<li>Prüfen Sie ob in der Installationsroutine des Custom-Pakets die Referenzen ebenfalls angelegt werden. (<code>.eloinst\\install</code>)</li>\n<li>Referenzieren Sie das Custom-Script an die richtige Stelle (Bspw. <code>Administration\\Index Server Scripting Base\\business solutions\\</code>) und entfernen die Referenz aus dem Original-Paket.</li>\n</ol>\n\n\n<p>Installationspakete ab Version 1.02.002 (oder mit den Developer-Tools ab Version 1.02.002 erstellte Pakete) erkennen dies und behandeln Referenzen aus dem Custom Paket priorisiert. Wird ein Update ausgeführt wird das zugehörige Script aus dem Basis-Paket nicht in den entsprechenden Bereich referenziert. Beim Einspielen eines Individuellen Custom-Pakets nimmt das Setup während der Installation ebenfalls Schritt 3 vor und entfernt die Referenz des Scripts aus dem Basispaket.</p>\n\n<p><span class=\"tag_caution\">Änderungen an internen Klassen der <span\nstyle='font-style:italic'>Business Solutions</span>-Module sind nicht erwünscht und sorgen für einen erhöhten Aufwand in der Projektrealisierung. Technologie-Module wie bspw. <span\nstyle='font-weight:bold;font-style:italic'>common</span>,<span\nstyle='font-weight:bold;font-style:italic'> connector</span> etc. dürfen keinesfalls verändert werden, da diese ebenfalls Abhängigkeiten zu anderen <span\nstyle='font-style:italic'>Business Solutions</span> aufweisen. Sollten dennoch Änderungen an den Basisklassen der Lösung erforderlich sein, führt dies zu Problemen mit Updatefähigkeit und Support. In diesem Fall muss eine Änderungshistorie der Klassen gepflegt werden, damit bei Updates der frühere Zustand wiederhergestellt werden kann.</span></p>\n\n<p><span class=\"tag_important\">Es empfiehlt sich, modifizierte Klassen ebenfalls mit einer Farbe zu markieren (bspw. rot).</span></p>\n","title":"Erweitern von ELO Business Solutions/ Support"});