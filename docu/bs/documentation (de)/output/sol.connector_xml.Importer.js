Ext.data.JsonP.sol_connector_xml_Importer({"tagname":"class","name":"sol.connector_xml.Importer","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"lib_sol.connector_xml.Importer.js","href":"lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer"}],"author":[{"tagname":"author","name":"PZ, ELO Digital Office GmbH","email":null}],"version":["1.0"],"requires":["sol.common.SordUtils","sol.common.StringUtils","sol.connector_xml.Utils"],"aliases":{},"alternateClassNames":[],"extends":"sol.Base","mixins":[],"uses":[],"members":[{"name":"converter","tagname":"cfg","owner":"sol.connector_xml.Importer","id":"cfg-converter","meta":{}},{"name":"mapping","tagname":"cfg","owner":"sol.connector_xml.Importer","id":"cfg-mapping","meta":{"required":true}},{"name":"requiredConfig","tagname":"cfg","owner":"sol.Base","id":"cfg-requiredConfig","meta":{"protected":true}},{"name":"sord","tagname":"cfg","owner":"sol.connector_xml.Importer","id":"cfg-sord","meta":{"required":true}},{"name":"tables","tagname":"cfg","owner":"sol.connector_xml.Importer","id":"cfg-tables","meta":{}},{"name":"xsd","tagname":"cfg","owner":"sol.connector_xml.Importer","id":"cfg-xsd","meta":{}},{"name":"$className","tagname":"property","owner":"sol.Base","id":"property-S-className","meta":{"protected":true}},{"name":"config","tagname":"property","owner":"sol.connector_xml.Importer","id":"property-config","meta":{"private":true}},{"name":"documentBuilder","tagname":"property","owner":"sol.connector_xml.Importer","id":"property-documentBuilder","meta":{"private":true}},{"name":"logger","tagname":"property","owner":"sol.connector_xml.Importer","id":"property-logger","meta":{"private":true}},{"name":"sordZ","tagname":"property","owner":"sol.connector_xml.Importer","id":"property-sordZ","meta":{"private":true}},{"name":"utils","tagname":"property","owner":"sol.connector_xml.Importer","id":"property-utils","meta":{"private":true}},{"name":"validator","tagname":"property","owner":"sol.connector_xml.Importer","id":"property-validator","meta":{"private":true}},{"name":"$super","tagname":"method","owner":"sol.Base","id":"method-S-super","meta":{"private":true}},{"name":"initialize","tagname":"method","owner":"sol.Base","id":"method-initialize","meta":{"private":true}},{"name":"process","tagname":"method","owner":"sol.connector_xml.Importer","id":"method-process","meta":{}},{"name":"processCreate","tagname":"method","owner":"sol.connector_xml.Importer","id":"method-processCreate","meta":{"private":true}},{"name":"processMapping","tagname":"method","owner":"sol.connector_xml.Importer","id":"method-processMapping","meta":{"private":true}},{"name":"processTable","tagname":"method","owner":"sol.connector_xml.Importer","id":"method-processTable","meta":{"private":true}},{"name":"processTables","tagname":"method","owner":"sol.connector_xml.Importer","id":"method-processTables","meta":{"private":true}},{"name":"save","tagname":"method","owner":"sol.connector_xml.Importer","id":"method-save","meta":{"private":true}},{"name":"validate","tagname":"method","owner":"sol.connector_xml.Importer","id":"method-validate","meta":{}}],"code_type":"ext_define","id":"class-sol.connector_xml.Importer","short_doc":"This is the XML importer object. ...","classIcon":"icon-class","superclasses":["sol.Base"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/sol.Base' rel='sol.Base' class='docClass'>sol.Base</a><div class='subclass '><strong>sol.connector_xml.Importer</strong></div></div><h4>Requires</h4><div class='dependency'><a href='#!/api/sol.common.SordUtils' rel='sol.common.SordUtils' class='docClass'>sol.common.SordUtils</a></div><div class='dependency'><a href='#!/api/sol.common.StringUtils' rel='sol.common.StringUtils' class='docClass'>sol.common.StringUtils</a></div><div class='dependency'><a href='#!/api/sol.connector_xml.Utils' rel='sol.connector_xml.Utils' class='docClass'>sol.connector_xml.Utils</a></div><h4>Files</h4><div class='dependency'><a href='source/lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer' target='_blank'>lib_sol.connector_xml.Importer.js</a></div></pre><div class='doc-contents'><p>This is the XML importer object.</p>\n\n<p>The importer is used to process XML files and write extracted metadata into an existing Sord object.\nThe metadata extraction is controlled by a configuration object.</p>\n\n<h1>Usage</h1>\n\n<pre><code>var objId = '(GUID)' ,\n    xml = new java.io.File( 'myxmlfile.xml' ),\n    importer;\n\nimporter = <a href=\"#!/api/sol-static-method-create\" rel=\"sol-static-method-create\" class=\"docClass\">sol.create</a>(\"<a href=\"#!/api/sol.connector_xml.Importer\" rel=\"sol.connector_xml.Importer\" class=\"docClass\">sol.connector_xml.Importer</a>\", {\n  ignoreDtd: true,  //optional\n  xsd: [{ name: \"XSD Name\", guid: \"(04089DB6-E667-EDDE-DB86-5FCB6E5F4DFB)\" }],  //optional\n  sord: {\n    mask: \"Eingangsrechnung\"\n  },\n  mapping: [\n    { name: \"date\", key: \"INVOICE_DATE\", type: \"GRP\", xpath: \"/invoice/date\", converter: \"dateToIso\" },\n    { name: \"recipient number\", key: \"RECIPIENT_NO\", type: \"GRP\", xpath: \"/invoice/recipientcode\" },\n    { name: \"recipient name\", key: \"RECIPIENT_NAME\", type: \"GRP\", xpath: \"/invoice/recipientcode\", converter: \"recipientName\" },\n    { name: \"status\", key: \"INVOICE_STATUS\", type: \"GRP\", xpath: \"/invoice/status\" },\n    { name: \"cash discount days\", key: \"INVOICE_CASH_DISCOUNT_DAYS\", type: \"MAP\", xpath: \"/invoice/discount-days\" }\n  ],\n  tables: [\n    {\n      xpath: \"/invoice/items/item\",\n      prefix: \"ITEM\",\n      ignoreEmptyLines: true, //optional\n      mapping: [\n        { name: \"unit\", key: \"UNIT\", type: \"MAP\", xpath: \"articleUnit\", pattern: \"{FIELD}{i}\", converter: \"inviQuantityCode\" },\n        { name: \"number\", key: \"NUMBER\", type: \"MAP\", xpath: \"articleNumber\", pattern: \"{FIELD}{i}\" },\n        { name: \"name\", key: \"NAME\", type: \"MAP\", xpath: \"articleName\" }\n      ]\n    }\n  ],\n  converter: [\n    { name: \"dateToIso\", type: \"DateConverter\", fromPattern: \"yyyy-MM-dd\", toPattern: \"yyyyMMdd\" },\n    { name: \"recipientName\", type: \"DynamicKwlLookup\", kwl: \"sol.invoice.ix.dynkwl.Company\", focusfield: \"COMPANY_CODE\", returnfield: \"COMPANY_NAME\", defaultValue: \"nicht gepflegt\" },\n    { name: \"inviQuantityCode\", type: \"DynamicKwlLookup\", kwl: \"sol.invoice.ix.dynkwl.Units\", focusfield: \"INVI_QUANTITY_UNIT_CODE\", returnfield: \"INVI_QUANTITY_UNIT\", dependentFields: [\"COMPANY_NAME\"], defaultValue: \"Code ung√ºltig\" }\n  ]\n});\n\nif (importer.validate(xml)) {\n  importer.process(xml, objId);\n}\n</code></pre>\n\n<h2>Configuration</h2>\n\n<p>The configuration consists of several properties/sections, which will be described below.</p>\n\n<h3>ignoreDtd</h3>\n\n<p>If set to <code>true</code>, existing DTDs in the XML will be ignored</p>\n\n<h3>xsd</h3>\n\n<p>This contains an Array with GUIDs of XSD files in the archive. They're optional, but if none are defined the validation will always return true.</p>\n\n<h3>sord (required)</h3>\n\n<p>This Object needs to have the property 'mask'.\nThe 'mask' String specifies which mask the processed archive document needs to have in order for a proper processing.</p>\n\n<h3>mapping (required)</h3>\n\n<p>This Object holds configurations for the processing of the metadata. The Array contains Objects containing a name, a key (either objkey name or mapkey) a xpath in the XML and an optional converter.</p>\n\n<pre><code>{ name: \"invoice date\", key: \"INVOICE_DATE\", type: \"GRP\", xpath: \"/invoice/date\", converter: \"dateToIso\" }\n</code></pre>\n\n<ul>\n<li>name: a descriptive name</li>\n<li>key: either objkey name or mapkey</li>\n<li>type: this could be \"GRP\" for an index field or \"MAP\" for a map field</li>\n<li>xpath: XPath string to retrieve the value from the XML</li>\n<li>converter: (optional) name of a converter; this converter needs to be defined in the 'converter' section and will be applied to an extracted value, before it will be writen</li>\n</ul>\n\n\n<h3>tables (optional)</h3>\n\n<p>This contains an Array of table objects. Each table object has the following properties:</p>\n\n<ul>\n<li>name: descriptive name of the table</li>\n<li>xpath: this XPath string points to the XML nodes which represent the table lines</li>\n<li>prefix: this string can be used in the patter (see further below)</li>\n<li>ignoreEmptyLines: (optional) this boolean value defines, if an empty node should produce an empty line or should be ignored</li>\n<li>mapping: (see mapping section above; differences will be explained below)</li>\n</ul>\n\n\n<h4>table mapping</h4>\n\n<p>The difference is, that type can only be \"MAP\". Due to the repeatimg nature of a table it would make no sense, to save the data in an index field.</p>\n\n<p>Another addition is the optional pattern property. This pattern defines the structure of the map key and can contain placeholders:</p>\n\n<ul>\n<li>{PREFIX}: this will be replaced with the table.prefix property</li>\n<li>{FIELD}: ths will be replaced with the key of the mapping</li>\n<li>{i}: this would be replaced with a running number</li>\n</ul>\n\n\n<h3>converter (optional)</h3>\n\n<p>This object contains the configurations for the converters (used inside the mapping sections)</p>\n\n<pre><code>[\n  { name: \"dateToIso\", type: \"DateConverter\", fromPattern: \"yyyy-MM-dd\", toPattern: \"yyyyMMdd\" }\n]\n</code></pre>\n\n<ul>\n<li>name: name to reference this converter from the mappings (see <a href=\"#!/api/sol.connector_xml.Converter\" rel=\"sol.connector_xml.Converter\" class=\"docClass\">Converter</a>)</li>\n<li>type: this string will be used to determine the correct converter (see <a href=\"#!/api/sol.connector_xml.Converter\" rel=\"sol.connector_xml.Converter\" class=\"docClass\">Converter</a>)</li>\n<li>any other property depends on the used converter.</li>\n</ul>\n\n      <p class='version-tag'>Version: <b>1.0</b></p>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Required config options</h3><div id='cfg-mapping' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='sol.connector_xml.Importer'>sol.connector_xml.Importer</span><br/><a href='source/lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer-cfg-mapping' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.connector_xml.Importer-cfg-mapping' class='name expandable'>mapping</a> : Object<span class=\"signature\"><span class='required' >required</span></span></div><div class='description'><div class='short'>Mapping of XML data to ELO fields. ...</div><div class='long'><p>Mapping of XML data to ELO fields.</p>\n\n<pre><code>// example configuration\nmapping:[\n  { name: \"invoice date\", key: \"INVOICE_DATE\", type: \"GRP\", xpath: \"/invoice/date\", converter: \"dateToIso\" }\n],\n</code></pre>\n<ul><li><span class='pre'>type</span> : String<div class='sub-desc'><p>(required)\nType of the elo field. Could me \"MAP\" or \"GRP\".</p>\n</div></li><li><span class='pre'>xpath</span> : String<div class='sub-desc'><p>(required)\nXPath expression that identifies the required XML node.</p>\n</div></li><li><span class='pre'>converter</span> : String<div class='sub-desc'><p>Converter that is used to the imported value into a different format.</p>\n</div></li></ul></div></div></div><div id='cfg-sord' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='sol.connector_xml.Importer'>sol.connector_xml.Importer</span><br/><a href='source/lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer-cfg-sord' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.connector_xml.Importer-cfg-sord' class='name expandable'>sord</a> : Object<span class=\"signature\"><span class='required' >required</span></span></div><div class='description'><div class='short'>Defines Sord specific information. ...</div><div class='long'><p>Defines Sord specific information.</p>\n\n<pre><code>// example configuration\nsord: {\n  mask: \"Invoice\"\n},\n</code></pre>\n<ul><li><span class='pre'>mask</span> : <div class='sub-desc'><p>(required) Specifies which mask the processed archive document needs to have in order for a proper processing.</p>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Optional config options</h3><div id='cfg-converter' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='sol.connector_xml.Importer'>sol.connector_xml.Importer</span><br/><a href='source/lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer-cfg-converter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.connector_xml.Importer-cfg-converter' class='name expandable'>converter</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Definition of custom converters that can be used by field mappings. ...</div><div class='long'><p>Definition of custom converters that can be used by field mappings.</p>\n\n<pre><code>// example configuration\nconverter: {\n  dateToIso: { type: \"DateConverter\", fromPattern: \"yyyy-MM-dd\", toPattern: \"yyyyMMdd\" },\n  recipientName: { type: \"DynamicKwlLookup\", kwl: \"sol.invoice.ix.dynkwl.Recipients\", focusfield: \"RECIPIENT_NO\", returnfield: \"RECIPIENT_NAME\", defaultValue: \"nicht gepflegt\" },\n  inviQuantityCode: { type: \"DynamicKwlLookup\", kwl: \"sol.invoice.ix.dynkwl.Units\", focusfield: \"INVI_QUANTITY_UNIT_CODE\", returnfield: \"INVI_QUANTITY_UNIT\", dependentFields: [\"RECIPIENT_NAME\"], defaultValue: \"Code ung√ºltig\" }\n}\n</code></pre>\n</div></div></div><div id='cfg-requiredConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/sol.Base' rel='sol.Base' class='defined-in docClass'>sol.Base</a><br/><a href='source/lib_Class.html#sol-Base-cfg-requiredConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.Base-cfg-requiredConfig' class='name expandable'>requiredConfig</a> : Array<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>List of required config properties. ...</div><div class='long'><p>List of required config properties. <a href=\"#!/api/sol.Base-method-initialize\" rel=\"sol.Base-method-initialize\" class=\"docClass\">sol.Base.initialize</a> throws an exception if one of the properties is null or undefined.</p>\n</div></div></div><div id='cfg-tables' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='sol.connector_xml.Importer'>sol.connector_xml.Importer</span><br/><a href='source/lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer-cfg-tables' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.connector_xml.Importer-cfg-tables' class='name expandable'>tables</a> : Object[]<span class=\"signature\"></span></div><div class='description'><div class='short'>Configuration for multiple child nodes of the same type. ...</div><div class='long'><p>Configuration for multiple child nodes of the same type. Represented as a table.</p>\n\n<pre><code>// example configuration\ntables: [{\n  xpath: \"/invoice/items/item\",\n  prefix: \"ITEM\",\n  ignoreEmptyLines: true, //optional\n  mapping: {\n    \"UNIT\" : { type: \"MAP\", xpath: \"articleUnit\", pattern: \"{FIELD}{i}\", converter: \"inviQuantityCode\" },\n  }\n}],\n</code></pre>\n<ul><li><span class='pre'>xpath</span> : String<div class='sub-desc'><p>XPath evaluation to identefity the root element.</p>\n</div></li><li><span class='pre'>prefix</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>ignoreEmptyLines</span> : String<div class='sub-desc'><p>true if empty lines should be ignored.</p>\n</div></li><li><span class='pre'>mapping</span> : <div class='sub-desc'><p>Mapping of XML data to ELO fields. Refer to 'mapping' for more information.</p>\n</div></li></ul></div></div></div><div id='cfg-xsd' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='sol.connector_xml.Importer'>sol.connector_xml.Importer</span><br/><a href='source/lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer-cfg-xsd' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.connector_xml.Importer-cfg-xsd' class='name expandable'>xsd</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>XSD files can be used in order to validate the passed format. ...</div><div class='long'><p>XSD files can be used in order to validate the passed format. Contains an Array with Objects caontaining the GUID of XSD files in ELO and a name for the file (just for viewing purpose).</p>\n\n<p>If one XSD has dependencies to other files please ensure that all files are properly referenced.</p>\n\n<pre><code>// example configuration\nxsd: [{ name: \"XSD Name\", guid: \"(04089DB6-E667-EDDE-DB86-5FCB6E5F4DFB)\" }],\n</code></pre>\n\n<p>This configuration is optional, but if none are defined the validation will always return true.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-S-className' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/sol.Base' rel='sol.Base' class='defined-in docClass'>sol.Base</a><br/><a href='source/lib_Class.html#sol-Base-property-S-className' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.Base-property-S-className' class='name expandable'>$className</a> : Object<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'><p>{String}\nname of the class including its namespace.</p>\n</div><div class='long'><p>{String}\nname of the class including its namespace.</p>\n</div></div></div><div id='property-config' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='sol.connector_xml.Importer'>sol.connector_xml.Importer</span><br/><a href='source/lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer-property-config' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.connector_xml.Importer-property-config' class='name expandable'>config</a> : Object<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='property-documentBuilder' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='sol.connector_xml.Importer'>sol.connector_xml.Importer</span><br/><a href='source/lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer-property-documentBuilder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.connector_xml.Importer-property-documentBuilder' class='name expandable'>documentBuilder</a> : Function<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='property-logger' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='sol.connector_xml.Importer'>sol.connector_xml.Importer</span><br/><a href='source/lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer-property-logger' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.connector_xml.Importer-property-logger' class='name expandable'>logger</a> : Object<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/sol.Base-property-logger\" rel=\"sol.Base-property-logger\" class=\"docClass\">sol.Base.logger</a></p></div></div></div><div id='property-sordZ' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='sol.connector_xml.Importer'>sol.connector_xml.Importer</span><br/><a href='source/lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer-property-sordZ' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.connector_xml.Importer-property-sordZ' class='name expandable'>sordZ</a> : Object<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='property-utils' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='sol.connector_xml.Importer'>sol.connector_xml.Importer</span><br/><a href='source/lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer-property-utils' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.connector_xml.Importer-property-utils' class='name expandable'>utils</a> : Object<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='property-validator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='sol.connector_xml.Importer'>sol.connector_xml.Importer</span><br/><a href='source/lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer-property-validator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.connector_xml.Importer-property-validator' class='name expandable'>validator</a> : Object<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-S-super' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/sol.Base' rel='sol.Base' class='defined-in docClass'>sol.Base</a><br/><a href='source/lib_Class.html#sol-Base-method-S-super' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.Base-method-S-super' class='name expandable'>$super</a>( <span class='pre'>superClassName, functionName, arguments</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Calls a function of a superclass thanks to its name. ...</div><div class='long'><p>Calls a function of a superclass thanks to its name. Superclass must be part of the calling objects class hierarchy.</p>\n\n<p><b>Please note that calling superclass functions might lead to an infinitive loop if misused. Please validate that none class other than the classes superclass is passed as the superclass parent.</b></p>\n\n<pre><code>me.$super(superClassName, functionName, attributesArray);\n</code></pre>\n\n<p>A basic example of the initialize-function will look as followed.</p>\n\n<pre><code>me.$super(\"<a href=\"#!/api/sol.Base\" rel=\"sol.Base\" class=\"docClass\">sol.Base</a>\", \"initialize\", [config]);\nme.$super(\"<a href=\"#!/api/sol.Base\" rel=\"sol.Base\" class=\"docClass\">sol.Base</a>\", \"initialize\", arguments);\n</code></pre>\n\n<p>A word on performance: The superclass name must be passed since the js rhino engine does not allow accessing the caller of the callee due to performance reasons.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>superClassName</span> : String<div class='sub-desc'><p>name of the super class.</p>\n</div></li><li><span class='pre'>functionName</span> : String<div class='sub-desc'><p>name of the function that should be called.</p>\n</div></li><li><span class='pre'>arguments</span> : Object[]<div class='sub-desc'><p>list of arguments that should be passed to the function.</p>\n</div></li></ul></div></div></div><div id='method-initialize' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/sol.Base' rel='sol.Base' class='defined-in docClass'>sol.Base</a><br/><a href='source/lib_Class.html#sol-Base-method-initialize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.Base-method-initialize' class='name expandable'>initialize</a>( <span class='pre'>config</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Initialize class. ...</div><div class='long'><p>Initialize class.\nThis function is called after the class was instantiated.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'><p>parameters as defined. See documentation for more details.</p>\n</div></li></ul></div></div></div><div id='method-process' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='sol.connector_xml.Importer'>sol.connector_xml.Importer</span><br/><a href='source/lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer-method-process' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.connector_xml.Importer-method-process' class='name expandable'>process</a>( <span class='pre'>xml, objId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Starts the processing the XML file according to the configuration and writes the metadata into an Sord object ...</div><div class='long'><p>Starts the processing the XML file according to the configuration and writes the metadata into an Sord object</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xml</span> : java.io.File<div class='sub-desc'><p>The XML file that should be processed</p>\n</div></li><li><span class='pre'>objId</span> : String<div class='sub-desc'><p>The ID of the Sord object</p>\n</div></li></ul></div></div></div><div id='method-processCreate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='sol.connector_xml.Importer'>sol.connector_xml.Importer</span><br/><a href='source/lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer-method-processCreate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.connector_xml.Importer-method-processCreate' class='name expandable'>processCreate</a>( <span class='pre'></span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>[TODO] Starting a workflow ...</div><div class='long'><p>[TODO] Starting a workflow</p>\n</div></div></div><div id='method-processMapping' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='sol.connector_xml.Importer'>sol.connector_xml.Importer</span><br/><a href='source/lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer-method-processMapping' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.connector_xml.Importer-method-processMapping' class='name expandable'>processMapping</a>( <span class='pre'></span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Processes the mapping section from the configuration ...</div><div class='long'><p>Processes the mapping section from the configuration</p>\n</div></div></div><div id='method-processTable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='sol.connector_xml.Importer'>sol.connector_xml.Importer</span><br/><a href='source/lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer-method-processTable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.connector_xml.Importer-method-processTable' class='name expandable'>processTable</a>( <span class='pre'>table</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Processes one table section ...</div><div class='long'><p>Processes one table section</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>table</span> : org.w3c.dom.Element<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-processTables' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='sol.connector_xml.Importer'>sol.connector_xml.Importer</span><br/><a href='source/lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer-method-processTables' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.connector_xml.Importer-method-processTables' class='name expandable'>processTables</a>( <span class='pre'></span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Processes the tables section from the configuration ...</div><div class='long'><p>Processes the tables section from the configuration</p>\n</div></div></div><div id='method-save' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='sol.connector_xml.Importer'>sol.connector_xml.Importer</span><br/><a href='source/lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer-method-save' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.connector_xml.Importer-method-save' class='name expandable'>save</a>( <span class='pre'></span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Saves the changes of the Sord and the map data. ...</div><div class='long'><p>Saves the changes of the Sord and the map data.</p>\n</div></div></div><div id='method-validate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='sol.connector_xml.Importer'>sol.connector_xml.Importer</span><br/><a href='source/lib_sol.connector_xml.Importer.html#sol-connector_xml-Importer-method-validate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/sol.connector_xml.Importer-method-validate' class='name expandable'>validate</a>( <span class='pre'>xml</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Validation against the schema which is defined in the config ...</div><div class='long'><p>Validation against the schema which is defined in the config</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xml</span> : java.io.File<div class='sub-desc'><p>The XML file that should be validated</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});