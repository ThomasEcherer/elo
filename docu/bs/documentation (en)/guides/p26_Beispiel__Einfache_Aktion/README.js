Ext.data.JsonP.p26_Beispiel__Einfache_Aktion({"guide":"<h1 id='p26_Beispiel__Einfache_Aktion-section-example%3A-simple-action'>Example: Simple action</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li>1. <a href='#!/guide/p26_Beispiel__Einfache_Aktion-section-definition-of-the-action'>Definition of the action</a>\n </li>\n<li>2. <a href='#!/guide/p26_Beispiel__Einfache_Aktion-section-indexserver-implementation'>Indexserver implementation</a>\n </li>\n<li>3. <a href='#!/guide/p26_Beispiel__Einfache_Aktion-section-elo-workflow'>ELO workflow</a>\n </li>\n<li>4. <a href='#!/guide/p26_Beispiel__Einfache_Aktion-section-form'>Form</a>\n </li>\n<li>5. <a href='#!/guide/p26_Beispiel__Einfache_Aktion-section-localization'>Localization</a>\n </li>\n</ul></div>\n\n\n<p><span class=\"tag_important\">The implementation of the &quot;Approve contract&quot; function is described in the following. </span></p>\n\n\n<p>This consists of the following components:</p>\n\n\n<ul>\n<li>Definition of the action</li>\n<li>Implementation of the action in the Indexserver</li>\n<li>ELO workflow</li>\n<li>ELO form</li>\n</ul>\n\n\n<p>The user selects a contract in ELO and clicks &quot;Start approval&quot; on the ribbon. </p>\n\n\n<p><p><img src=\"guides/p26_Beispiel__Einfache_Aktion/img1.png\" alt=\"\" width=\"1919\" height=\"331\"></p></p>\n\n\n<p>This opens a form in which the user can select who should check the contract next and add optional comments.</p>\n\n\n<p><p><img src=\"guides/p26_Beispiel__Einfache_Aktion/img3.png\" alt=\"\" width=\"1026\" height=\"724\"></p></p>\n\n\n<h2 id='p26_Beispiel__Einfache_Aktion-section-definition-of-the-action'>Definition of the action</h2>\n\n\n<pre><code>{\n  &quot;type&quot;: &quot;SIMPLE_ACTION&quot;,\n  &quot;ribbon&quot;: {\n    &quot;ribbonTab&quot;: {\n      &quot;name&quot;: &quot;TAB_SOL_CONTRACT&quot;,\n      &quot;text&quot;: &quot;sol.contract.client.ribbon.tabContract&quot;,\n      &quot;position&quot;: 95\n    },\n    &quot;buttongroup&quot;: {\n      &quot;name&quot;: &quot;GRP_SOL_EDITCONTRACTS&quot;,\n      &quot;mode&quot;: &quot;big&quot;,\n      &quot;text&quot;: &quot;sol.contract.client.ribbon.bandEdit&quot;,\n      &quot;position&quot;: 20\n    },\n    &quot;button&quot;: {\n      &quot;name&quot;: &quot;BTN_SOL_CONTRACTINITATEAPPROVAL&quot;,\n      &quot;text&quot;: &quot;sol.contract.client.ribbon.btnInitiateApproval&quot;,\n      &quot;splitText&quot;: &quot;sol.contract.client.ribbon.btnInitiateApprovalSplit&quot;,\n      &quot;tooltipText&quot;: &quot;sol.contract.client.ribbon.btnInitiateApproval.tooltip&quot;,\n      &quot;tooltipTitle&quot;: &quot;&quot;,\n      &quot;access&quot;: {\n        &quot;document&quot;: false,\n        &quot;folder&quot;: true\n      },\n      &quot;web&quot;: {\n        &quot;smallIcon&quot;: &quot;sol-contract-initateapproval16&quot;,\n        &quot;smallIconHighRes&quot;: &quot;sol-contract-initateapproval16-200&quot;,\n        &quot;bigIcon&quot;: &quot;sol-contract-initateapproval32&quot;,\n        &quot;bigIconHighRes&quot;: &quot;sol-contract-initateapproval32-200&quot;\n      },\n      &quot;jc&quot;: {\n        &quot;buttonId&quot;: &quot;729&quot;\n      },\n      &quot;position&quot;: 10\n    }\n  },\n  &quot;action&quot;: {\n    &quot;fct&quot;: &quot;RF_sol_contract_action_ApproveContract&quot;,\n    &quot;cfgTemplate&quot;: &quot;{\\&quot;objId\\&quot;: \\&quot;{{objId}}\\&quot; }&quot;\n  }\n}\n</code></pre>\n\n\n<h2 id='p26_Beispiel__Einfache_Aktion-section-indexserver-implementation'>Indexserver implementation</h2>\n\n\n<p>The implementation of the action loads the configuration file in ELO and, if the currently selected element is not a contract, searches the parent elements for a contract. This is required as contracts may contain child structures.</p>\n\n\n<p>The form for the first user node that is assigned to the current user is then determined and returned to the client as an event.</p>\n\n\n<pre><code>importPackage(Packages.de.elo.ix.client);\nimportPackage(Packages.de.elo.ix.jscript);\n\n//@include lib_Class.js\n//@include lib_sol.common.Config.js\n//@include lib_sol.common.JsonUtils.js\n//@include lib_sol.common.SordUtils.js\n//@include lib_sol.common.IxUtils.js\n//@include lib_sol.common.WfUtils.js\n//@include lib_sol.common.RepoUtils.js\n//@include lib_sol.common.SordTypeUtils.js\n//@include lib_sol.common.Template.js\n//@include lib_sol.common.TranslateTerms.js\n//@include lib_sol.common.ix.RfUtils.js\n//@include lib_sol.common.ix.ActionBase.js\n//@include lib_sol.common.ix.FunctionBase.js\n//@include lib_sol.contract.ix.ContractUtils.js\n\n/**\n * Approve a contract\n * \n * @eloix\n * @requires <a href=\"#!/api/sol.common.Config\" rel=\"sol.common.Config\" class=\"docClass\">sol.common.Config</a>\n * @requires <a href=\"#!/api/sol.common.JsonUtils\" rel=\"sol.common.JsonUtils\" class=\"docClass\">sol.common.JsonUtils</a>\n * @requires <a href=\"#!/api/sol.common.SordUtils\" rel=\"sol.common.SordUtils\" class=\"docClass\">sol.common.SordUtils</a>\n * @requires <a href=\"#!/api/sol.common.IxUtils\" rel=\"sol.common.IxUtils\" class=\"docClass\">sol.common.IxUtils</a>\n * @requires <a href=\"#!/api/sol.common.CounterUtils\" rel=\"sol.common.CounterUtils\" class=\"docClass\">sol.common.CounterUtils</a>\n * @requires <a href=\"#!/api/sol.common.AclUtils\" rel=\"sol.common.AclUtils\" class=\"docClass\">sol.common.AclUtils</a>\n * @requires <a href=\"#!/api/sol.common.RepoUtils\" rel=\"sol.common.RepoUtils\" class=\"docClass\">sol.common.RepoUtils</a>\n * @requires <a href=\"#!/api/sol.common.Template\" rel=\"sol.common.Template\" class=\"docClass\">sol.common.Template</a>\n * @requires <a href=\"#!/api/sol.common.TranslateTerms\" rel=\"sol.common.TranslateTerms\" class=\"docClass\">sol.common.TranslateTerms</a>\n * @requires <a href=\"#!/api/sol.common.WfUtils\" rel=\"sol.common.WfUtils\" class=\"docClass\">sol.common.WfUtils</a>\n * @requires <a href=\"#!/api/sol.common.ix.RfUtils\" rel=\"sol.common.ix.RfUtils\" class=\"docClass\">sol.common.ix.RfUtils</a>\n * @requires <a href=\"#!/api/sol.common.ix.ActionBase\" rel=\"sol.common.ix.ActionBase\" class=\"docClass\">sol.common.ix.ActionBase</a>\n * @requires <a href=\"#!/api/sol.common.ix.FunctionBase\" rel=\"sol.common.ix.FunctionBase\" class=\"docClass\">sol.common.ix.FunctionBase</a>\n * @requires <a href=\"#!/api/sol.common.ix.functions.CopyFolderContents\" rel=\"sol.common.ix.functions.CopyFolderContents\" class=\"docClass\">sol.common.ix.functions.CopyFolderContents</a>\n * @requires <a href=\"#!/api/sol.common.ix.functions.CopySordData\" rel=\"sol.common.ix.functions.CopySordData\" class=\"docClass\">sol.common.ix.functions.CopySordData</a>\n * @requires sol.common.ContractUtils\n */\n<a href=\"#!/api/sol-static-method-define\" rel=\"sol-static-method-define\" class=\"docClass\">sol.define</a>(&quot;sol.contract.ix.actions.ApproveContract&quot;, {\n  extend: &quot;<a href=\"#!/api/sol.common.ix.ActionBase\" rel=\"sol.common.ix.ActionBase\" class=\"docClass\">sol.common.ix.ActionBase</a>&quot;,\n\n  requiredConfig: [&quot;ci&quot;, &quot;user&quot;, &quot;objId&quot;],\n\n  /** \n   * @cfg {de.elo.ix.client.ClientInfo} ci (required)\n   */\n\n  /** \n   * @cfg {de.elo.ix.client.UserInfo} user (required)\n   */\n\n  /**\n   * @cfg {String} templateId (required)\n   * Object ID of the template\n   */\n\n  initialize: function (config) {\n    var me = this;\n    me.$super(&quot;<a href=\"#!/api/sol.common.ix.ActionBase\" rel=\"sol.common.ix.ActionBase\" class=\"docClass\">sol.common.ix.ActionBase</a>&quot;, &quot;initialize&quot;, [config]);\n    me.config = sol.contract.ix.ContractUtils.loadConfig();\n  },\n\n  getName: function () {\n    return &quot;InitateApproval&quot;;\n  },\n\n  process: function () {\n    var me = this,\n        contractSord, contractConfig, contractObjId,\n        wfPrefix, wfNumber, wfName,\n        flowId;\n\n    contractConfig = sol.contract.ix.ContractUtils.loadConfig();\n    contractSord = <a href=\"#!/api/sol.common.RepoUtils-method-findObjectTypeInHierarchy\" rel=\"sol.common.RepoUtils-method-findObjectTypeInHierarchy\" class=\"docClass\">sol.common.RepoUtils.findObjectTypeInHierarchy</a>(me.objId, contractConfig.objectTypes);\n    if (!contractSord) {\n      me.addErrorEvent(&quot;sol.contract.client.contract.msg.noContractFoundInHierarchy&quot;, &quot;&quot;, &quot;&quot;, me.ci.language);\n      return;\n    }\n\n    contractObjId = contractSord.id;\n\n    wfPrefix = me.getLocalizedString(me.ci, contractConfig.workflows.approveContract.workflowPrefixKey);\n    wfNumber = me.actionId;\n    wfName = <a href=\"#!/api/sol-static-method-create\" rel=\"sol-static-method-create\" class=\"docClass\">sol.create</a>(&quot;<a href=\"#!/api/sol.common.Template\" rel=\"sol.common.Template\" class=\"docClass\">sol.common.Template</a>&quot;, { source: contractConfig.workflows.approveContract.workflowNameTemplate }).apply({ wfPrefix: wfPrefix, wfDate: new Date(), wfNumber: wfNumber });\n\n    flowId = me.startWorkflow(contractObjId, contractConfig.workflows.approveContract.workflowTemplateName, wfName);\n\n    me.addWfDialogEvent(flowId, { objId: contractObjId });\n  }\n});\n\n/**\n * @member sol.contract.ix.actions.ApproveContract\n * @method RF_sol_contract_action_ApproveContract\n * @static\n * @inheritdoc <a href=\"#!/api/sol.common.ix.FunctionBase-static-method-RF_FunctionName\" rel=\"sol.common.ix.FunctionBase-static-method-RF_FunctionName\" class=\"docClass\">sol.common.ix.FunctionBase.RF_FunctionName</a>\n */\nfunction RF_sol_contract_action_ApproveContract(ec, configAny) {\n  var rfUtils = <a href=\"#!/api/sol.common.ix.RfUtils\" rel=\"sol.common.ix.RfUtils\" class=\"docClass\">sol.common.ix.RfUtils</a>,\n      config = rfUtils.parseAndCheckParams(ec, arguments.callee.name, configAny, &quot;objId&quot;),\n      approveContract;\n\n  config.ci = ec.ci;\n  config.user = ec.user;\n\n  approveContract = <a href=\"#!/api/sol-static-method-create\" rel=\"sol-static-method-create\" class=\"docClass\">sol.create</a>(&quot;sol.contract.ix.actions.ApproveContract&quot;, config);\n  return approveContract.execute();\n}\n</code></pre>\n\n\n<h2 id='p26_Beispiel__Einfache_Aktion-section-elo-workflow'>ELO workflow</h2>\n\n\n<p>The first user node contains a form that the person approving the contract can enter information to. The user can select from the <span\nstyle='font-weight:bold'>OK</span> and <span style='font-weight:bold'>Cancel</span> forwarding options later on.</p>\n\n\n<p><p><img src=\"guides/p26_Beispiel__Einfache_Aktion/img5.png\" alt=\"\" width=\"695\" height=\"1111\"></p></p>\n\n\n<h2 id='p26_Beispiel__Einfache_Aktion-section-form'>Form</h2>\n\n\n<p>This list can be extended or changed as much as you wish. ELO Business Solutions use tab groups to modularize the form logic further.</p>\n\n\n<p><p><img src=\"guides/p26_Beispiel__Einfache_Aktion/img7.png\" alt=\"\" width=\"803\" height=\"532\"></p></p>\n\n\n<p><p><img src=\"guides/p26_Beispiel__Einfache_Aktion/img9.png\" alt=\"\" width=\"653\" height=\"328\"></p></p>\n\n\n<h2 id='p26_Beispiel__Einfache_Aktion-section-localization'>Localization</h2>\n\n\n<p>All localization keys, such as <code>sol.contract.client.ribbon.btnInitiateApproval</code>, are stored in properties files.</p>\n\n","title":"Example: Simple action"});