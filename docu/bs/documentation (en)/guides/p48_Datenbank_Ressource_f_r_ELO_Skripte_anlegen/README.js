Ext.data.JsonP.p48_Datenbank_Ressource_f_r_ELO_Skripte_anlegen({"guide":"<h1 id='p48_Datenbank_Ressource_f_r_ELO_Skripte_anlegen-section-creating-database-resources-for-elo-scripts'>Creating database resources for ELO scripts</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li>1. <a href='#!/guide/p48_Datenbank_Ressource_f_r_ELO_Skripte_anlegen-section-saving-a-database-resource-to-a-context.xml-file'>Saving a database resource to a context.xml file</a>\n </li>\n<li>2. <a href='#!/guide/p48_Datenbank_Ressource_f_r_ELO_Skripte_anlegen-section-using-the-resource'>Using the resource</a>\n </li>\n</ul></div>\n\n\n<p>The following steps explain how to create a database resource in <span\nstyle='font-weight:bold;font-style:italic'>Apache Tomcat</span>. This is required if you need to access external databases from ELO scripting.</p>\n\n\n<blockquote>\n<p><span\nstyle='font-weight:bold;font-style:italic'>Example:</span><span\nstyle='font-style:italic'> Dynamic keyword lists enable you to access tables in the ELO repository database without having to make major modifications. However, if you need to access the </span><span\nstyle='font-weight:bold;font-style:italic'>DocXtractor Matching DB</span><span\nstyle='font-style:italic'>, you need to create a database resource that can be saved to the scripting (<code><a href=\"#!/api/sol.common.ix.DynKwlDatabaseIterator\" rel=\"sol.common.ix.DynKwlDatabaseIterator\" class=\"docClass\">sol.common.ix.DynKwlDatabaseIterator</a></code>) later on.</span></p>\n</blockquote>\n\n\n<h2 id='p48_Datenbank_Ressource_f_r_ELO_Skripte_anlegen-section-saving-a-database-resource-to-a-context.xml-file'>Saving a database resource to a context.xml file</h2>\n\n\n<p><span class=\"tag_important\">A description of the Tomcat <span\nstyle='font-style:italic'>context.xml</span> options can be found in the <a\nhref=\"https://tomcat.apache.org/tomcat-8.0-doc/config/context.html#Resource_Definitions\"><span\nstyle='font-style:italic'>Resource Definitions</span></a> in the Tomcat documentation.</span></p>\n\n\n<p>We recommend that you save the access data to the <span\nstyle='font-weight:bold;font-style:italic'>context.xml</span> file so that you do not need to enter them in the scripting:</p>\n\n\n<pre><code>&lt;?xml version='1.0' encoding='utf-8'?&gt;\n&lt;!-- The contents of this file will be loaded for each web application --&gt;\n&lt;Context&gt;\n\n    &lt;!-- Add folowing line to file --&gt;\n&lt;Resource name=&quot;jdbc/invoice.dx&quot; auth=&quot;Container&quot; type=&quot;javax.sql.DataSource&quot; \n    driverClassName=&quot;com.microsoft.sqlserver.jdbc.SQLServerDriver&quot; \n    url=&quot;jdbc:sqlserver://localhost:1433;databaseName=invoice&quot; \n    username=&quot;elodb&quot; password=&quot;elo&quot; \n    maxActive=&quot;20&quot; maxIdle=&quot;10&quot; maxWait=&quot;-1&quot;/&gt;\n\n&lt;/Context&gt;\n</code></pre>\n\n\n<h2 id='p48_Datenbank_Ressource_f_r_ELO_Skripte_anlegen-section-using-the-resource'>Using the resource</h2>\n\n\n<p>After you restart Tomcat, you can use resources in dynamic keyword lists, for example. The <code>jdbc</code> configuration of the <code><a href=\"#!/api/sol.common.ix.DynKwlDatabaseIterator\" rel=\"sol.common.ix.DynKwlDatabaseIterator\" class=\"docClass\">sol.common.ix.DynKwlDatabaseIterator</a></code> class is used for this.</p>\n\n\n<p><span\nstyle='font-weight:bold'>Example:</span></p>\n\n\n<pre><code><a href=\"#!/api/sol-static-method-define\" rel=\"sol-static-method-define\" class=\"docClass\">sol.define</a>('sol.invoice.ix.dynkwl.Company', {\n  extend: '<a href=\"#!/api/sol.common.ix.DynKwlDatabaseIterator\" rel=\"sol.common.ix.DynKwlDatabaseIterator\" class=\"docClass\">sol.common.ix.DynKwlDatabaseIterator</a>',\n\n  // use INVOICE resource\n  jdbc: 'jdbc/INVOICE',\n\n  tableTitle: 'Firma',\n  sqlQuery: &quot;select CODE, NAME, STREET, ZIPCODE, CITY, COUNTRY_CODE from sol_invoice_company where CODE like ? OR NAME like ?&quot;,\n  sqlParams: [\n    {mode: 'STARTS_WITH'},\n    {mode: 'CONTAINS'}\n  ],\n  tableKeyNames: [&quot;COMPANY_CODE&quot;, &quot;COMPANY_NAME&quot;, null, null, null, null],\n  tableHeaders: [&quot;Number&quot;, &quot;Name&quot;, &quot;Street&quot;, &quot;Zipcode&quot;, &quot;City&quot;, &quot;Country&quot;]\n});\n</code></pre>\n\n","title":"Creating database resources for ELO scripts"});