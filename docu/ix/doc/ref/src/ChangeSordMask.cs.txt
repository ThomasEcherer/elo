using System;

namespace Examples
{
	/// <summary>
	/// This Exemple shows the usage of changeSordMask
	/// </summary>
	public class ChangeSordMask
	{
		// URL to IndexServer
		public String url;

		// [X] Account to authenticate 
		public String userName = "Administrator"; 
		public String userPwd = "";					

		public void run()
		{
			// IndexServer stub
			IXClient ix = null;
			try 
			{
				// Create IndexServer object
				Logger.instance().log("create IX...");
				ix = new IXClient(url);
				Logger.instance().log("create IX OK");

				// Prepare ClientInfo object with language and country
				IndexServer.ClientInfo ci = new IndexServer.ClientInfo();
				ci.language = "de";
				ci.country = "DE";

				// LOGIN
				Logger.instance().log("login...");
				IndexServer.LoginResult loginResult = ix.login2(ci, userName, userPwd, "myComputer", null);
				ci = loginResult.clientInfo;
				Logger.instance().log("login OK");

				// get constants
				Logger.instance().log("get const...");
				IndexServer.IXServicePortC CONST = ix.getCONST(ci);
				Logger.instance().log("get const OK");
		
				// Create a root folder based on keywording form "Basic entry".
				// Parent is the "imaginary" archive entry with object ID = 1.
				String parentId = "1"; 
				String maskId = "";   
				IndexServer.EditInfo editInfo = ix.createSord(ci, parentId, maskId, CONST.EDIT_INFO.mbSord);

				Logger.instance().log("created sord, GUID=" + editInfo.sord.guid);
				Logger.instance().log("name=" + editInfo.sord.name + ", #objKeys=" + editInfo.sord.objKeys.Length);

				// Change the storage mask to "Email"
				editInfo.sord.name = "C# change mask"; // to show, that attributes are not changed in changeSordMask
				editInfo = ix.changeSordMask(ci, editInfo.sord, "Email", CONST.EDIT_INFO.mbSord);

				Logger.instance().log("created sord, GUID=" + editInfo.sord.guid + ", objId=" + editInfo.sord.id);
				Logger.instance().log("name=" + editInfo.sord.name + ", #objKeys=" + editInfo.sord.objKeys.Length);

				// Hint: The Sord object was not saved, neither by createSord nor changeSordMask.
				//       You have to call checkinSord to save it to the database.

				// LOGOUT
				ix.logout2(ci);

			} 
			catch (Exception e) 
			{
				throw e;
			} 
			finally 
			{
				// Always release IXClient object to make sure 
				// that all all open sessions are closed on exit
				if (ix != null) 
				{
					Logger.instance().log("IX done...");
					ix.done();
					Logger.instance().log("IX done OK");
				}
			}

		}
	}
}
